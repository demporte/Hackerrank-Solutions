import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the minimumBribes function below.
    static void minimumBribes(int[] q) {
      int i,j;
      int index=0,value=0;
      int starting = 0;
      int minBribes = 0; 
      int estBribes;

      for(i=0;i<q.length;i++){
        index= i; 
        value = q[i];
        starting = value -1;
        estBribes = starting -index; 
        if(estBribes > 2){
            System.out.println("Too chaotic");
            return;
        }
            

          
        for(j=Math.max(0,value-1-1); j<i;j++){
            if(q[j] > q[i]){
                 minBribes++;
            }
        }
        
      }
      
      System.out.println(minBribes);
    }// end of function


    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int tItr = 0; tItr < t; tItr++) {
            int n = scanner.nextInt();
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            int[] q = new int[n];

            String[] qItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int i = 0; i < n; i++) {
                int qItem = Integer.parseInt(qItems[i]);
                q[i] = qItem;
            }

            minimumBribes(q);
        }

        scanner.close();
    }
}
